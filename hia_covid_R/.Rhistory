data=full_dataset)
summary(model)
model <- lm( Deaths ~
Confirmed_New_RollingAvg +
factor(Region) +
factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) #+
Median_Income_2018
,
data=full_dataset)
summary(model)
model <- lm( Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) #+
Median_Income_2018
,
data=full_dataset)
summary(model)
model <- lm( Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) #+
Median_Income_2018
,
data=full_dataset)
summary(model)
model <- lm( Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018
,
data=full_dataset)
summary(model)
model <- lm( Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) #+
# Median_Income_2018
,
data=full_dataset)
summary(model)
model <- lm( Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region)
,
data=full_dataset)
summary(model)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region)
data = full_dataset,
nvmax = 7)  #Best Subset Selection for ALL variables
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 7)  #Best Subset Selection for ALL variables
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 7)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
summary(regfit)
which.max(reg.summary$adjr2)
points(7,reg.summary$adjr2[7],col="red",cex=2,pch=10)
plot(reg.summary$cp,xlab="Number of Variables",ylab="Cp",type="l"
which.max(reg.summary$adjr2)
points(7,reg.summary$adjr2[7],col="red",cex=2,pch=10)
plot(reg.summary$cp,xlab="Number of Variables",ylab="Cp",type="l")
which.min(reg.summary$cp)
plot(regfit.full,scale="adjr2")
plot(regfit,scale="adjr2")
par(mfrow = c(2, 2))
plot(regfit,scale="adjr2")
par(mfrow = c(1, 2))
plot(regfit,scale="adjr2")
par(mfrow = c(2, 1))
plot(regfit,scale="adjr2")
which.max(reg.summary$adjr2)
plot(regfit,scale="adjr2")
par(mfrow = c(1, 1))
plot(regfit,scale="adjr2")
which.max(reg.summary$adjr2)
coef(regfit.full,4)
coef(regfit,4)
coef(regfit,7)
regfit.best=regsubsets(Deaths~.,data=full_dataset,nvmax=7)
regfit.best=regsubsets(Deaths~.,data=full_dataset,nvmax=4)
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$bic)
which.max(reg.summary$adjr2)
which.min(reg.summary$bic)
which.min(reg.summary$cp)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
coef(regfit, 8)
model <- lm (Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset
)
summary(model)
plot(regfit,scale="adjr2")
regfit = regsubsets(`Deaths_New_+14_RollingAvg` ~
factor(Region) +
factor(UrbanCD) +
Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
SOME_COLLEGE_2018 +
Median_Income_2018 +
factor(Region)*Confirmed_New_RollingAvg #+
factor(Region)*Poverty_PCT_2018 +
factor(Region)*SOME_COLLEGE_2018 +
factor(Region)*Median_Income_2018
,
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
regfit = regsubsets(`Deaths_New_+14_RollingAvg` ~
factor(Region) +
factor(UrbanCD) +
Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
SOME_COLLEGE_2018 +
Median_Income_2018 +
factor(Region)*Confirmed_New_RollingAvg +
factor(Region)*Poverty_PCT_2018 +
factor(Region)*SOME_COLLEGE_2018 +
factor(Region)*Median_Income_2018
,
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
par(mfrow = c(1, 1))
plot(reg.summary$rss, xlab = "Number of Variables", ylab = "RSS", type = "l")
plot(reg.summary$bic, xlab = "Number of Variables", ylab = "BIC", type = "l")
plot(reg.summary$rss, xlab = "Number of Variables", ylab = "RSS", type = "l")
which.max(reg.summary$adjr2)
which.max(reg.summary$adjr2)
which.min(reg.summary$bic)
summary(regfit)
coef(regfit,4)
coef(regfit,8)
library(leaps)
regfit = regsubsets(`Deaths_New_+14_RollingAvg` ~
factor(Region) +
factor(UrbanCD) +
Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
SOME_COLLEGE_2018 +
Median_Income_2018 +
factor(Region)*Confirmed_New_RollingAvg +
factor(Region)*Poverty_PCT_2018 +
#factor(Region)*SOME_COLLEGE_2018 +
factor(Region)*Median_Income_2018
,
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
par(mfrow = c(1, 1))
plot(reg.summary$rss, xlab = "Number of Variables", ylab = "RSS", type = "l")
plot(reg.summary$bic, xlab = "Number of Variables", ylab = "BIC", type = "l")
which.max(reg.summary$adjr2)
which.min(reg.summary$bic)
coef(regfit,8)
plot(reg.summary$bic, xlab = "Number of Variables", ylab = "BIC", type = "l")
model <- lm (Deaths ~
Confirmed_New_RollingAvg +
factor(Region) +
factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset
)
summary(model)
model <- lm (Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset
)
summary(model)
model <- lm (`Deaths_New_+14_RollingAvg` ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset
)
summary(model)
model <- lm (`Deaths_New_+14_RollingAvg` ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region)
,
data = full_dataset
)
summary(model)
model <- lm (`Confirmed_New_RollingAvg` ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region)
,
data = full_dataset
)
summary(model)
model <- lm (`Confirmed` ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region)
,
data = full_dataset
)
summary(model)
model <- lm (`Confirmed` ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State)
,
data = full_dataset
)
summary(model)
model <- lm (`Confirmed` ~
#Confirmed_New_RollingAvg +
#factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State)
,
data = full_dataset
)
summary(model)
model <- lm (`Confirmed` ~
#Confirmed_New_RollingAvg +
#factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State)
,
data = full_dataset
)
model <- lm (`Confirmed` ~
#Confirmed_New_RollingAvg +
#factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
#Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
#HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State)
,
data = full_dataset
)
summary(model)
model <- lm (`Poverty_PCT_2018` ~
#Confirmed_New_RollingAvg +
#factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
#Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
#Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
#HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State)
,
data = full_dataset
)
summary(model)
model <- lm (`Poverty_PCT_2018` ~
#Confirmed_New_RollingAvg +
#factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
#Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
#Median_Income_2018*factor(Region) +
HS_DIPLOMA_ONLY_2018 +
#HS_DIPLOMA_ONLY_2018*factor(Region) +
factor(State) +
factor(State) * HS_DIPLOMA_ONLY_2018
,
data = full_dataset
)
summary(model)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
Poverty_PCT_2018*factor(Region) +
Median_Income_2018 +
Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.min(reg.summary$bic)
coef(regfit, 8)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018 #+
#Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.min(reg.summary$bic)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018 #+
#Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
regfit = regsubsets(Deaths ~
#Confirmed_New_RollingAvg +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018, #+
#Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.min(reg.summary$bic)
coef(regfit, 5)
plot(regfit,scale="adjr2")
plot(regfit,scale="adjr2")
regfit = regsubsets(Deaths ~
Confirmed +
factor(Region) +
#factor(Region)*Confirmed_New_RollingAvg +
Poverty_PCT_2018 +
#Poverty_PCT_2018*factor(Region) +
Median_Income_2018, #+
#Median_Income_2018*factor(Region),
data = full_dataset,
nvmax = 10)  #Best Subset Selection for ALL variables
reg.summary <- summary(regfit)
plot(reg.summary$adjr2, xlab = "Number of Variables", ylab = "Adjusted RSq",
type = "l")
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.min(reg.summary$bic)
coef(regfit, 5)
summary(regfit)
which.max(reg.summary$adjr2)
which.min(reg.summary$cp)
which.min(reg.summary$bic)
coef(regfit, 6)
plot(regfit,scale="adjr2")
model <- lm (Deaths ~
Confirmed +
factor(Region) +
Poverty_PCT_2018 +
Median_Income_2018,
data = full_dataset
)
summary(model)
library(dplyr)
pub <- rp %>%
group_by(Publisher, Year_of_Release) %>%
summarise(Total_NA = sum(NA_Sales))
year <- rp %>%
group_by(Year_of_Release) %>%
summarise(Year_Total_NA = sum(NA_Sales))
merged <- merge(pub,year, by="Year_of_Release")
merged
merged$PCT_Marketshare <- 100*(merged$Total_NA/merged$Year_Total_NA)
library(ggplot2)
ggplot(data=merged, aes(x=Year_of_Release, y=PCT_Marketshare)) + geom_line() + facet_grid(~Publisher)
# Import data
library(tidyverse)
vg <- read.csv("data/Video_Games_Sales_as_at_22_Dec_2016.csv")
